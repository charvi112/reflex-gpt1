# Use slim Python base image
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install Node.js and necessary packages
ARG NODE_VERSION=20.x
RUN apt-get update && apt-get install -y \
    curl \
    libpq-dev \
    gnupg \
    unzip \
    && curl -fsSL https://deb.nodesource.com/setup_${NODE_VERSION} | bash - \
    && apt-get install -y nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Confirm Node.js and npm are installed
RUN node -v && npm -v

# Create app user (non-root)
RUN adduser --disabled-password --home /app reflex

# Set up Python virtual environment
RUN python -m venv /app/.venv
ENV PATH="/app/.venv/bin:$PATH"

# Copy project files
COPY --chown=reflex:reflex . /app

# If `.build-env` exists, rename it to `.env`
RUN [ -f .build-env ] && mv .build-env .env || true

# Set permissions for app directory
RUN chown -R reflex:reflex /app

# Switch to non-root user
USER reflex

# Install Python requirements
RUN pip install --no-cache-dir -r requirements.txt

# Initialize Reflex app (generates static files, etc.)
RUN reflex init

# Clean up .env after initialization
RUN rm -f .env

# Environment configuration
ENV NODE_PATH="/usr/lib/node_modules"
ENV REFLEX_DB_URL="sqlite:///reflex.db"
ENV PATH="/app/.venv/bin:/usr/local/bin:/usr/bin:/bin:$PATH"

# Make sure container stops immediately when killed
STOPSIGNAL SIGKILL

# Default command to run on container start
CMD ["sh", "-c", "reflex db migrate && reflex run --env prod --backend-only"]
